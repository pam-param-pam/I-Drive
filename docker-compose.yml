name: i-drive-dc
networks: 
  i-drive-network:
volumes:
  i-drive-backend-db:

services:

  ### redis
  
  redis:
    container_name: i-drive-redis
    image: redis:latest
    restart: unless-stopped
    #healthcheck:
    #  test: [ "CMD-SHELL", "ls" ]
    #  interval: 10s
    #  retries: 10
    networks:
      - i-drive-network



  
  ### Main backend
  
  backend:
    container_name: i-drive-backend
    image: pamparampam/i-drive-backend:${BACKENDTAG-latest}
    pull_policy: missing
    build:
      context: ./backend
    restart: unless-stopped
    ports:
      - 8000:${I_DRIVE_BACKEND_PORT}
    healthcheck:  # DO POPRAWY
      test: [ "CMD-SHELL", "ls" ]
      interval: 10s
      retries: 10
    depends_on:
      streamer:
        condition: service_healthy
    environment:
      - I_DRIVE_BACKEND_SECRET_KEY=${I_DRIVE_BACKEND_SECRET_KEY}
      - IS_DEV_ENV=${IS_DEV_ENV}
      - I_DRIVE_REDIS=${I_DRIVE_REDIS}
      - I_DRIVE_REDIS_PORT=${I_DRIVE_REDIS_PORT}
      - I_DRIVE_BACKEND=${I_DRIVE_BACKEND}
      - I_DRIVE_BACKEND_PORT=${I_DRIVE_BACKEND_PORT}
      - I_DRIVE_STREAMER=${I_DRIVE_STREAMER}
      - I_DRIVE_FRONTEND=${I_DRIVE_FRONTEND}
      - DISCORD_TOKEN1=${DISCORD_TOKEN1}
      - DISCORD_TOKEN2=${DISCORD_TOKEN2}
      - DISCORD_TOKEN3=${DISCORD_TOKEN3}
      - DISCORD_TOKEN4=${DISCORD_TOKEN4}
      - DISCORD_TOKEN5=${DISCORD_TOKEN5}
      - DISCORD_TOKEN6=${DISCORD_TOKEN6}
      - DISCORD_TOKEN7=${DISCORD_TOKEN7}
      - DISCORD_TOKEN8=${DISCORD_TOKEN8}
      - DISCORD_TOKEN9=${DISCORD_TOKEN9}
      - DISCORD_TOKEN10=${DISCORD_TOKEN10}
    
    volumes:
      - i-drive-backend-db:${I_DRIVE_STORAGE_DIR}/db.sqllite3
    networks:
      - i-drive-network
    deploy:
      resources:
        limits:
          memory: 64M


### Streamer backend
  
  streamer:
    container_name: i-drive-streamer
    image: pamparampam/i-drive-streamer:latest
    build:
      context: ./streamer
    restart: unless-stopped
    ports:
      - 8050:8050
    depends_on:
      - redis
    volumes:
      - i-drive-backend-db:${I_DRIVE_STORAGE_DIR}/db.sqllite3
    environment:
      - I_DRIVE_FRONTEND_SECRET_KEY=${I_DRIVE_FRONTEND_SECRET_KEY}
      - IS_DEV_ENV=${IS_DEV_ENV}
      - I_DRIVE_REDIS=${I_DRIVE_REDIS}
      - I_DRIVE_REDIS_PORT=${I_DRIVE_REDIS_PORT}
      - I_DRIVE_BACKEND=${I_DRIVE_BACKEND}
      - I_DRIVE_BACKEND_PORT=${I_DRIVE_BACKEND_PORT}
      - I_DRIVE_STREAMER=${I_DRIVE_STREAMER}
      - I_DRIVE_FRONTEND=${I_DRIVE_FRONTEND}
    healthcheck:  # DO POPRAWY
      test: [ "CMD-SHELL", "ls" ]
      interval: 10s
      retries: 10
    networks:
      - i-drive-network
    deploy:
      resources:
        limits:
          memory: 64M


 ### nginx

  nginx:
    image: nginx:1.26.0-alpine
    container_name: i-drive-nginx
    restart: unless-stopped
    ports:
      - 8080:80
    depends_on:
      backend:
        condition: service_healthy
      streamer:
        condition: service_healthy
    healthcheck: ### KWESTIA PORTU DO SPRAWDZENIA
      test: [ "CMD-SHELL", "curl -f http://localhost:80 || exit 1" ]
      interval: 10s
      retries: 10
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - i-drive-network
    deploy:
      resources:
        limits:
          memory: 64M