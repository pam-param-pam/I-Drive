name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 4. Build and push the Docker images using docker-compose
    - name: Build and push Docker images
      run: |
        docker-compose build
        docker-compose push

    # 5. Build Frontend
    - name: Change directory to frontend
      run: cd frontend

    # 6. Create .env file from GitHub secrets
    - name: Create .env for frontend
      run: |
        echo "VITE_BACKEND_BASE_URL=${{ secrets.VITE_BACKEND_BASE_URL }}" >> .env
        echo "VITE_BACKEND_BASE_WS=${{ secrets.VITE_BACKEND_BASE_WS }}" >> .env

    # 7. Install dependencies and run build
    - name: Install dependencies and build frontend
      run: |
        npm install
        npm run build

    # 8. Upload the dist folder as an artifact
    - name: Upload dist folder
      uses: actions/upload-artifact@v3
      with:
        name: frontend-dist
        path: ./frontend/dist


  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # najpierw musimy byc w odpowiednim dir
      - name: Create .env for backend and streamer
        run: |
          echo "IS_DEV_ENV=False" >> .env 
          echo "DEPLOYMENT_HOST=${{ secrets.DEPLOYMENT_HOST }}" >> .env
          echo "I_DRIVE_BACKEND_SECRET_KEY=${{ secrets.I_DRIVE_BACKEND_SECRET_KEY }}" >> .env
          echo "I_DRIVE_STREAMER_SECRET_KEY=${{ secrets.I_DRIVE_STREAMER_SECRET_KEY }}" >> .env
          
          echo "I_DRIVE_BACKEND_STORAGE_DIR=${{ secrets.I_DRIVE_BACKEND_STORAGE_DIR }}" >> .env
          
          echo "I_DRIVE_STREAMER_STORAGE_DIR=${{ secrets.I_DRIVE_STREAMER_STORAGE_DIR }}" >> .env
          
          echo "DISCORD_TOKEN1=${{ secrets.DISCORD_TOKEN1 }}" >> .env
          echo "DISCORD_TOKEN2=${{ secrets.DISCORD_TOKEN2 }}" >> .env
          echo "DISCORD_TOKEN3=${{ secrets.DISCORD_TOKEN3 }}" >> .env
          echo "DISCORD_TOKEN4=${{ secrets.DISCORD_TOKEN4 }}" >> .env
          echo "DISCORD_TOKEN5=${{ secrets.DISCORD_TOKEN5 }}" >> .env
          echo "DISCORD_TOKEN6=${{ secrets.DISCORD_TOKEN6 }}" >> .env
          echo "DISCORD_TOKEN7=${{ secrets.DISCORD_TOKEN7 }}" >> .env
          echo "DISCORD_TOKEN8=${{ secrets.DISCORD_TOKEN8 }}" >> .env
          echo "DISCORD_TOKEN9=${{ secrets.DISCORD_TOKEN9 }}" >> .env
          echo "DISCORD_TOKEN10=${{ secrets.DISCORD_TOKEN10 }}" >> .env
          
          echo "I_DRIVE_FRONTEND_ADDRESS=${{ secrets.DEPLOYMENT_HOST }}" >> .env
          echo "I_DRIVE_STREAMER_ADDRESS=${{ secrets.DEPLOYMENT_HOST }}" >> .env
          echo "I_DRIVE_BACKEND_ADDRESS=${{ secrets.DEPLOYMENT_HOST }}" >> .env
          echo "I_DRIVE_REDIS_ADDRESS=${{ secrets.DEPLOYMENT_HOST }}" >> .env

      - name: Deploy to Virtual Machine
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CI_DEPLOYMENT_HOST }}
          port: ${{ secrets.CI_DEPLOYMENT_PORT }}
          username: ${{ secrets.CI_RPI_USERNAME }}
          key: ${{ secrets.CI_RPI_SSH_KEY }}
          script: |
            skrypt tutaj nwm co