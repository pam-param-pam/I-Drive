# Generated by Django 4.2.18 on 2025-02-20 17:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import shortuuid.main
import shortuuidfield.fields
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="DiscordAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_id", models.CharField(max_length=255)),
                (
                    "attachment_id",
                    models.CharField(max_length=255, null=True, unique=True),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        limit_choices_to={"model__in": ("bot", "webhook")},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.TextField(max_length=255)),
                ("extension", models.CharField(max_length=10)),
                ("streamable", models.BooleanField(default=False)),
                ("size", models.PositiveBigIntegerField()),
                ("mimetype", models.CharField(default="text/plain", max_length=15)),
                ("type", models.CharField(default="text", max_length=15)),
                ("inTrash", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified_at", models.DateTimeField(auto_now_add=True)),
                ("ready", models.BooleanField(default=False)),
                ("inTrashSince", models.DateTimeField(blank=True, null=True)),
                ("key", models.BinaryField(null=True)),
                ("iv", models.BinaryField(null=True)),
                ("encryption_method", models.SmallIntegerField()),
                ("duration", models.IntegerField(blank=True, null=True)),
                ("frontend_id", models.CharField(max_length=40, unique=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Folder",
            fields=[
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.TextField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified_at", models.DateTimeField(auto_now_add=True)),
                ("inTrash", models.BooleanField(default=False)),
                ("inTrashSince", models.DateTimeField(blank=True, null=True)),
                ("ready", models.BooleanField(default=True)),
                ("password", models.CharField(blank=True, max_length=255, null=True)),
                ("autoLock", models.BooleanField(default=False)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "lockFrom",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="website.folder",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subfolders",
                        to="website.folder",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Webhook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.CharField(max_length=150, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("guild_id", models.CharField(max_length=100)),
                ("channel_id", models.CharField(max_length=100)),
                ("discord_id", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=100)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VideoPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now_add=True)),
                ("timestamp", models.IntegerField(default=0)),
                (
                    "file",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="website.file"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserZIP",
            fields=[
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("token", models.CharField(blank=True, max_length=255, unique=True)),
                ("name", models.CharField(blank=True, max_length=255)),
                (
                    "files",
                    models.ManyToManyField(
                        blank=True, related_name="user_zips", to="website.file"
                    ),
                ),
                (
                    "folders",
                    models.ManyToManyField(
                        blank=True, related_name="user_zips", to="website.folder"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sorting_by", models.CharField(default="name", max_length=50)),
                ("sort_by_asc", models.BooleanField(default=False)),
                ("locale", models.CharField(default="en", max_length=20)),
                ("view_mode", models.CharField(default="width grid", max_length=20)),
                ("date_format", models.BooleanField(default=False)),
                ("hide_locked_folders", models.BooleanField(default=False)),
                ("concurrent_upload_requests", models.SmallIntegerField(default=2)),
                ("subfolders_in_shares", models.BooleanField(default=False)),
                ("encryption_method", models.SmallIntegerField(default=2)),
                ("keep_creation_timestamp", models.BooleanField(default=False)),
                ("theme", models.CharField(default="dark", max_length=20)),
                ("use_proxy", models.BooleanField(default=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserPerms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("globalLock", models.BooleanField(default=False)),
                ("admin", models.BooleanField(default=False)),
                ("execute", models.BooleanField(default=False)),
                ("create", models.BooleanField(default=True)),
                ("modify", models.BooleanField(default=True)),
                ("lock", models.BooleanField(default=True)),
                ("delete", models.BooleanField(default=True)),
                ("share", models.BooleanField(default=True)),
                ("download", models.BooleanField(default=True)),
                ("read", models.BooleanField(default=True)),
                ("settings_modify", models.BooleanField(default=True)),
                ("discord_modify", models.BooleanField(default=True)),
                ("change_password", models.BooleanField(default=True)),
                ("reset_lock", models.BooleanField(default=False)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Thumbnail",
            fields=[
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("size", models.PositiveBigIntegerField()),
                ("iv", models.BinaryField(null=True)),
                ("key", models.BinaryField(null=True)),
                (
                    "attachment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="website.discordattachment",
                    ),
                ),
                (
                    "file",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="website.file"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ShareableLink",
            fields=[
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("token", models.CharField(max_length=255, unique=True)),
                ("expiration_time", models.DateTimeField()),
                ("password", models.TextField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("object_id", models.CharField(max_length=22)),
                (
                    "content_type",
                    models.ForeignKey(
                        limit_choices_to={"model__in": ("folder", "file")},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Preview",
            fields=[
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("size", models.PositiveBigIntegerField()),
                ("encrypted_size", models.PositiveBigIntegerField()),
                ("key", models.BinaryField()),
                ("iso", models.CharField(max_length=50, null=True)),
                ("aperture", models.CharField(max_length=50, null=True)),
                ("exposure_time", models.CharField(max_length=50, null=True)),
                ("model_name", models.CharField(max_length=50, null=True)),
                ("focal_length", models.CharField(max_length=50, null=True)),
                (
                    "attachment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="website.discordattachment",
                    ),
                ),
                (
                    "file",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preview",
                        to="website.file",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalWebhook",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("url", models.CharField(db_index=True, max_length=150)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("guild_id", models.CharField(max_length=100)),
                ("channel_id", models.CharField(max_length=100)),
                ("discord_id", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=100)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical webhook",
                "verbose_name_plural": "historical webhooks",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalUserSettings",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("sorting_by", models.CharField(default="name", max_length=50)),
                ("sort_by_asc", models.BooleanField(default=False)),
                ("locale", models.CharField(default="en", max_length=20)),
                ("view_mode", models.CharField(default="width grid", max_length=20)),
                ("date_format", models.BooleanField(default=False)),
                ("hide_locked_folders", models.BooleanField(default=False)),
                ("concurrent_upload_requests", models.SmallIntegerField(default=2)),
                ("subfolders_in_shares", models.BooleanField(default=False)),
                ("encryption_method", models.SmallIntegerField(default=2)),
                ("keep_creation_timestamp", models.BooleanField(default=False)),
                ("theme", models.CharField(default="dark", max_length=20)),
                ("use_proxy", models.BooleanField(default=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical user settings",
                "verbose_name_plural": "historical user settingss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalUserPerms",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("globalLock", models.BooleanField(default=False)),
                ("admin", models.BooleanField(default=False)),
                ("execute", models.BooleanField(default=False)),
                ("create", models.BooleanField(default=True)),
                ("modify", models.BooleanField(default=True)),
                ("lock", models.BooleanField(default=True)),
                ("delete", models.BooleanField(default=True)),
                ("share", models.BooleanField(default=True)),
                ("download", models.BooleanField(default=True)),
                ("read", models.BooleanField(default=True)),
                ("settings_modify", models.BooleanField(default=True)),
                ("discord_modify", models.BooleanField(default=True)),
                ("change_password", models.BooleanField(default=True)),
                ("reset_lock", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical user perms",
                "verbose_name_plural": "historical user permss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalThumbnail",
            fields=[
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        db_index=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("size", models.PositiveBigIntegerField()),
                ("iv", models.BinaryField(null=True)),
                ("key", models.BinaryField(null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "attachment",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="website.discordattachment",
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="website.file",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical thumbnail",
                "verbose_name_plural": "historical thumbnails",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalTag",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical tag",
                "verbose_name_plural": "historical tags",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPreview",
            fields=[
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        db_index=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("size", models.PositiveBigIntegerField()),
                ("encrypted_size", models.PositiveBigIntegerField()),
                ("key", models.BinaryField()),
                ("iso", models.CharField(max_length=50, null=True)),
                ("aperture", models.CharField(max_length=50, null=True)),
                ("exposure_time", models.CharField(max_length=50, null=True)),
                ("model_name", models.CharField(max_length=50, null=True)),
                ("focal_length", models.CharField(max_length=50, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "attachment",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="website.discordattachment",
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="website.file",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical preview",
                "verbose_name_plural": "historical previews",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFragment",
            fields=[
                ("sequence", models.SmallIntegerField()),
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        db_index=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                    ),
                ),
                ("size", models.PositiveBigIntegerField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("offset", models.IntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "attachment",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="website.discordattachment",
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="website.file",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical fragment",
                "verbose_name_plural": "historical fragments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFile",
            fields=[
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        db_index=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                    ),
                ),
                ("name", models.TextField(max_length=255)),
                ("extension", models.CharField(max_length=10)),
                ("streamable", models.BooleanField(default=False)),
                ("size", models.PositiveBigIntegerField()),
                ("mimetype", models.CharField(default="text/plain", max_length=15)),
                ("type", models.CharField(default="text", max_length=15)),
                ("inTrash", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("last_modified_at", models.DateTimeField(blank=True, editable=False)),
                ("ready", models.BooleanField(default=False)),
                ("inTrashSince", models.DateTimeField(blank=True, null=True)),
                ("key", models.BinaryField(null=True)),
                ("iv", models.BinaryField(null=True)),
                ("encryption_method", models.SmallIntegerField()),
                ("duration", models.IntegerField(blank=True, null=True)),
                ("frontend_id", models.CharField(db_index=True, max_length=40)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="website.folder",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical file",
                "verbose_name_plural": "historical files",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDiscordSettings",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "channel_id",
                    models.CharField(blank=True, default="", max_length=100),
                ),
                ("guild_id", models.CharField(blank=True, default="", max_length=100)),
                (
                    "attachment_name",
                    models.CharField(blank=True, default="", max_length=20),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical discord settings",
                "verbose_name_plural": "historical discord settingss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBot",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("token", models.CharField(db_index=True, max_length=100)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("discord_id", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=100)),
                ("disabled", models.BooleanField(default=False)),
                ("reason", models.CharField(blank=True, max_length=100)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical bot",
                "verbose_name_plural": "historical bots",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Fragment",
            fields=[
                ("sequence", models.SmallIntegerField()),
                (
                    "id",
                    shortuuidfield.fields.ShortUUIDField(
                        blank=True,
                        default=shortuuid.main.ShortUUID.uuid,
                        editable=False,
                        max_length=22,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("size", models.PositiveBigIntegerField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("offset", models.IntegerField()),
                (
                    "attachment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="website.discordattachment",
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fragments",
                        to="website.file",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="file",
            name="parent",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="files",
                to="website.folder",
            ),
        ),
        migrations.AddField(
            model_name="file",
            name="tags",
            field=models.ManyToManyField(
                blank=True, related_name="files", to="website.tag"
            ),
        ),
        migrations.CreateModel(
            name="DiscordSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "channel_id",
                    models.CharField(blank=True, default="", max_length=100),
                ),
                ("guild_id", models.CharField(blank=True, default="", max_length=100)),
                (
                    "attachment_name",
                    models.CharField(blank=True, default="", max_length=20),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=100, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("discord_id", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=100)),
                ("disabled", models.BooleanField(default=False)),
                ("reason", models.CharField(blank=True, max_length=100)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AuditEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=64)),
                ("ip", models.GenericIPAddressField(null=True)),
                ("datetime", models.DateTimeField(auto_now_add=True)),
                ("user_agent", models.CharField(max_length=250)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
